using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

namespace CLIParserSourceGenerator
{
    internal class OptionsClassGenerator
    {
        public string ClassName { get; }
        private List<OptionInfo> options { get; }

        public OptionsClassGenerator(List<OptionInfo> options)
        {
            this.options = options;
            this.ClassName = "AutoGeneratedCLIOptionsHolder";
        }

        public string GenerateSource()
        {
            return this.Generate().NormalizeWhitespace().ToFullString();
        }

        private ClassDeclarationSyntax Generate()
        {
            List<MemberDeclarationSyntax> properties =
            [
                ParseMemberDeclaration("public bool ___ShowHelp___ { get; set; }")!,
                ..this.options.SelectMany(o => o.GenerateOptionProperties())
            ];
            return ClassDeclaration(this.ClassName)
                .WithModifiers(
                    TokenList(
                        Token(
                            TriviaList(
                                Trivia(
                                    PragmaWarningDirectiveTrivia(
                                        Token(SyntaxKind.DisableKeyword),
                                        true
                                    )
                                    .WithErrorCodes(
                                        SingletonSeparatedList<ExpressionSyntax>(
                                            IdentifierName("CS8618")
                                        )
                                    )
                                )
                            ),
                            SyntaxKind.InternalKeyword,
                            TriviaList()
                        )
                    )
                )
                .WithMembers(
                    List(properties)
                );
        }
    }
}
